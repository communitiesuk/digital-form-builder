name: Deploy to AWS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Which AWS Account to use
        type: choice
        required: true
        options:
          - dev
          - test
          - uat
          - production
  push:
    paths: # Ignore README markdown and only deploy when something in the copilot folder has changed
      - "!**/README.md"
  pull_request:
    types:
      - closed # Further protection - only allow this workflow to run automatically on closed pull requests

jobs:
  copilot_environments_workflow_setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.copilot_env_matrix.outputs.env_list }}
    steps:
      - id: copilot_env_matrix
        run: |
          if [ "${{ inputs.environment }}" != '' ]; then
            echo "env_list=[\"${{ inputs.environment }}\"]" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == 'refs/heads/main' ]; then
            echo "env_list=[\"dev\", \"test\", \"uat\", \"production\"]" >> $GITHUB_OUTPUT
          else
            echo "env_list=[\"dev\", \"test\"]" >> $GITHUB_OUTPUT
          fi

  dev_deploy:
    if: ${{ needs.copilot_environments_workflow_setup.outputs.pre_matrix != '' && toJson(fromJson(needs.copilot_environments_workflow_setup.outputs.pre_matrix)) != '[]' }}
    concurrency:
      group: "fsd-preaward-copilot-dev"
      cancel-in-progress: false
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    needs: [copilot_environments_workflow_setup]
    runs-on: ubuntu-latest
    continue-on-error: true
    environment: dev
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Get current date
        shell: bash
        id: currentdatetime
        run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
          role-session-name: FORMRUNNER_DEV_COPILOT_${{ steps.currentdatetime.outputs.datetime }}
          aws-region: eu-west-2

      - name: Install AWS Copilot CLI
        shell: bash
        run: |
          curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

      - name: confirm copilot env
        shell: bash
        run: |
          if [ $(copilot env ls) != "dev" ]; then
            echo $(copilot env ls)
            exit 1
          fi

      - name: Inject Git SHA into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Inject replacement image into manifest
        run: |
          yq -i '.image.location = "ghcr.io/communitiesuk/runner:${{ github.ref_name == 'main' && 'latest' || format('sha-{0}', github.sha) }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Copilot dev deploy
        id: deploy_build
        run: |
          copilot svc deploy --env dev --app pre-award

  test_deploy:
    if: ${{ needs.copilot_environments_workflow_setup.outputs.pre_matrix != '' && toJson(fromJson(needs.copilot_environments_workflow_setup.outputs.pre_matrix)) != '[]' }}
    concurrency:
      group: "fsd-preaward-copilot-test"
      cancel-in-progress: false
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    needs: [copilot_environments_workflow_setup, dev_deploy]
    runs-on: ubuntu-latest
    continue-on-error: true
    environment: test
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Get current date
        shell: bash
        id: currentdatetime
        run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
          role-session-name: FORMRUNNER_TEST_COPILOT_${{ steps.currentdatetime.outputs.datetime }}
          aws-region: eu-west-2

      - name: Install AWS Copilot CLI
        shell: bash
        run: |
          curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

      - name: confirm copilot env
        shell: bash
        run: |
          if [ $(copilot env ls) != "test" ]; then
            echo $(copilot env ls)
            exit 1
          fi

      - name: Inject Git SHA into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Inject replacement image into manifest
        run: |
          yq -i '.image.location = "ghcr.io/communitiesuk/runner:${{ github.ref_name == 'main' && 'latest' || format('sha-{0}', github.sha) }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Copilot test deploy
        id: deploy_build
        run: |
          copilot svc deploy --env test --app pre-award

  uat_deploy:
    if: ${{ needs.copilot_environments_workflow_setup.outputs.post_matrix != '' && toJson(fromJson(needs.copilot_environments_workflow_setup.outputs.post_matrix)) != '[]' }}
    concurrency:
      group: "fsd-preaward-copilot-uat"
      cancel-in-progress: false
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    needs: [copilot_environments_workflow_setup, test_deploy]
    runs-on: ubuntu-latest
    continue-on-error: true
    environment: uat
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Get current date
        shell: bash
        id: currentdatetime
        run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
          role-session-name: FORMRUNNER_UAT_COPILOT_${{ steps.currentdatetime.outputs.datetime }}
          aws-region: eu-west-2

      - name: Install AWS Copilot CLI
        shell: bash
        run: |
          curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

      - name: confirm copilot env
        shell: bash
        run: |
          if [ $(copilot env ls) != "uat" ]; then
            echo $(copilot env ls)
            exit 1
          fi

      - name: Inject Git SHA into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Inject replacement image into manifest
        run: |
          yq -i '.image.location = "ghcr.io/communitiesuk/runner:${{ github.ref_name == 'main' && 'latest' || format('sha-{0}', github.sha) }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Copilot uat deploy
        id: deploy_build
        run: |
          copilot svc deploy --env uat --app pre-award

  production_deploy:
    if: ${{ needs.copilot_environments_workflow_setup.outputs.pre_matrix != '' && toJson(fromJson(needs.copilot_environments_workflow_setup.outputs.pre_matrix)) != '[]' }}
    concurrency:
      group: "fsd-preaward-copilot-production"
      cancel-in-progress: false
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    needs: [copilot_environments_workflow_setup, uat_deploy]
    runs-on: ubuntu-latest
    continue-on-error: true
    environment: production
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Get current date
        shell: bash
        id: currentdatetime
        run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
          role-session-name: FORMRUNNER_PRODUCTION_COPILOT_${{ steps.currentdatetime.outputs.datetime }}
          aws-region: eu-west-2

      - name: Install AWS Copilot CLI
        shell: bash
        run: |
          curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

      - name: confirm copilot env
        shell: bash
        run: |
          if [ $(copilot env ls) != "production" ]; then
            echo $(copilot env ls)
            exit 1
          fi

      - name: Inject Git SHA into manifest
        run: |
          yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Inject replacement image into manifest
        run: |
          yq -i '.image.location = "ghcr.io/communitiesuk/runner:${{ github.ref_name == 'main' && 'latest' || format('sha-{0}', github.sha) }}"'  copilot/fsd-form-runner/manifest.yml

      - name: Copilot production deploy
        id: deploy_build
        run: |
          copilot svc deploy --env production --app pre-award
